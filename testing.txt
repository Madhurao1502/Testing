<div class="comment-box-container">
  <div class="comments">
    <div *ngFor="let comment of comments" class="comment-item">
      <div class="comment-content">
        <span *ngIf="editingCommentId !== comment.id">{{ comment.text }}</span>
        <input *ngIf="editingCommentId === comment.id" [(ngModel)]="comment.text" class="edit-input" />

        <div class="comment-actions">
          <span class="timestamp">{{ comment.timestamp | date:'short' }}</span>
          <button *ngIf="editingCommentId !== comment.id" (click)="editComment(comment)">✏️ Edit</button>
          <button *ngIf="editingCommentId === comment.id" (click)="saveEdit(comment)">💾 Save</button>
          <button (click)="deleteComment(comment.id)">🗑 Delete</button>
        </div>
      </div>
    </div>
  </div>

  <div class="add-comment">
    <input matInput placeholder="Write a comment..." [formControl]="newComment" />
    <button mat-button color="primary" (click)="addComment()">➕ Add</button>
  </div>
</div>


.comment-box-container {
  width: 100%;
  max-width: 500px;
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 10px;
  background-color: #f9f9f9;
}

.comments {
  max-height: 300px;
  overflow-y: auto;
  padding-bottom: 10px;
}

.comment-item {
  background-color: #e3f2fd;
  border-radius: 10px;
  padding: 8px;
  margin: 5px 0;
  display: flex;
  flex-direction: column;
}

.comment-content {
  display: flex;
  flex-direction: column;
}

.comment-actions {
  display: flex;
  justify-content: space-between;
  margin-top: 5px;
  font-size: 12px;
}

.timestamp {
  color: gray;
}

.add-comment {
  display: flex;
  gap: 5px;
  margin-top: 10px;
}

.add-comment input {
  flex: 1;
  padding: 5px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

button {
  background: none;
  border: none;
  cursor: pointer;
}

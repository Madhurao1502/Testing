
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html'
})
export class AppComponent {
  availableItems = [
    { Name: 'SomeName', ID: 123, Key: 1 },
    { Name: 'SomeName1', ID: 1234, Key: 2 },
    { Name: 'SomeName2', ID: 1235, Key: 3 },
    { Name: 'SomeName3', ID: 1236, Key: 5 }
  ];

  selectedItems: any[] = [];
  selectedAvailableKeys = new Set<number>();
  selectedSelectedKeys = new Set<number>();

  toggleAvailable(key: number) {
    if (this.selectedAvailableKeys.has(key)) {
      this.selectedAvailableKeys.delete(key);
    } else {
      this.selectedAvailableKeys.add(key);
    }
  }

  toggleSelected(key: number) {
    if (this.selectedSelectedKeys.has(key)) {
      this.selectedSelectedKeys.delete(key);
    } else {
      this.selectedSelectedKeys.add(key);
    }
  }

  addItems() {
    const itemsToAdd = this.availableItems.filter(item =>
      this.selectedAvailableKeys.has(item.Key)
    );
    this.selectedItems.push(...itemsToAdd);
    this.availableItems = this.availableItems.filter(item =>
      !this.selectedAvailableKeys.has(item.Key)
    );
    this.selectedAvailableKeys.clear();
  }

  removeItems() {
    const itemsToRemove = this.selectedItems.filter(item =>
      this.selectedSelectedKeys.has(item.Key)
    );
    this.availableItems.push(...itemsToRemove);
    this.selectedItems = this.selectedItems.filter(item =>
      !this.selectedSelectedKeys.has(item.Key)
    );
    this.selectedSelectedKeys.clear();
  }
}


<div class="container">
  <!-- Available Table -->
  <div class="table-container">
    <h3>Available Items</h3>
    <table>
      <thead>
        <tr>
          <th></th>
          <th>Name</th>
          <th>ID</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let item of availableItems">
          <td>
            <input type="checkbox" [checked]="selectedAvailableKeys.has(item.Key)" (change)="toggleAvailable(item.Key)">
          </td>
          <td>{{ item.Name }}</td>
          <td>{{ item.ID }}</td>
        </tr>
      </tbody>
    </table>
  </div>

  <!-- Control Buttons -->
  <div class="button-container">
    <button (click)="addItems()">Add →</button>
    <button (click)="removeItems()">← Remove</button>
  </div>

  <!-- Selected Table -->
  <div class="table-container">
    <h3>Selected Items</h3>
    <table>
      <thead>
        <tr>
          <th></th>
          <th>Name</th>
          <th>ID</th>
        </tr>
      </thead>
      <tbody>
        <tr *ngFor="let item of selectedItems">
          <td>
            <input type="checkbox" [checked]="selectedSelectedKeys.has(item.Key)" (change)="toggleSelected(item.Key)">
          </td>
          <td>{{ item.Name }}</td>
          <td>{{ item.ID }}</td>
        </tr>
      </tbody>
    </table>
  </div>
</div>


.container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 40px;
  margin-top: 40px;
  flex-wrap: wrap;
}

.table-container {
  background: #f9f9f9;
  padding: 16px;
  border-radius: 12px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  min-width: 280px;
}

table {
  width: 100%;
  border-collapse: collapse;
  font-family: Arial, sans-serif;
}

th, td {
  padding: 8px 12px;
  border-bottom: 1px solid #ddd;
  text-align: left;
}

thead {
  background-color: #e2e8f0;
}

h3 {
  text-align: center;
  margin-bottom: 12px;
}

.button-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 10px;
}

.button-container button {
  padding: 8px 16px;
  font-weight: bold;
  border: none;
  background-color: #3b82f6;
  color: white;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.button-container button:hover {
  background-color: #2563eb;
}



toggleSelectAllAvailable(checked: boolean) {
  if (checked) {
    this.availableItems.forEach(item => this.selectedAvailableKeys.add(item.Key));
  } else {
    this.selectedAvailableKeys.clear();
  }
}

toggleSelectAllSelected(checked: boolean) {
  if (checked) {
    this.selectedItems.forEach(item => this.selectedSelectedKeys.add(item.Key));
  } else {
    this.selectedSelectedKeys.clear();
  }
}


<!-- Available Items Table -->
<thead>
  <tr>
    <th>
      <input
        type="checkbox"
        [checked]="availableItems.length > 0 && selectedAvailableKeys.size === availableItems.length"
        (change)="toggleSelectAllAvailable($event.target.checked)">
    </th>
    <th>Name</th>
    <th>ID</th>
  </tr>
</thead>


<!-- Selected Items Table -->
<thead>
  <tr>
    <th>
      <input
        type="checkbox"
        [checked]="selectedItems.length > 0 && selectedSelectedKeys.size === selectedItems.length"
        (change)="toggleSelectAllSelected($event.target.checked)">
    </th>
    <th>Name</th>
    <th>ID</th>
  </tr>
</thead>



confirmDialog(): void {
  if (this.dialogMode === 'add') {
    if (!this.rightClickedNode) return;

    const parent = this.rightClickedNode;
    parent.children = parent.children || [];
    
    // Generate new unique ID â€” your existing method or logic
    const newId = this.generateNewNodeId(parent);

    const newNode: ShelfNode = {
      Id: newId,
      PId: parent.Id,
      Name: this.dialogNodeName.trim(),
      optional: 'Y',
      IsNewlyAdded: 'N',
      children: []
    };

    parent.children.push(newNode);
    this.sortChildrenByName(parent);

    this.treeControl.expand(parent);

    // Refresh UI by replacing array reference
    this.dataSource.data = this.dataSource.data.slice();
  }
  else if (this.dialogMode === 'edit') {
    if (!this.rightClickedNode) return;
    this.rightClickedNode.Name = this.dialogNodeName.trim();
    this.rightClickedNode.IsNewlyAdded = 'U';

    // Refresh UI for edits
    this.dataSource.data = this.dataSource.data.slice();
  }

  this.showDialog = false;
}


private generateNewNodeId(parent: ShelfNode): number {
  const childIds = parent.children?.map(c => c.Id) || [];
  const maxId = childIds.length ? Math.max(...childIds) : parent.Id * 1000; // Arbitrary scheme to avoid collisions
  return maxId + 1;
}

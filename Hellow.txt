handleWeekSelectionChange(selectedWeeks: number[]): void {
  const removedWeeks = this.detectRemovedWeeks(selectedWeeks);

  // Check for weeks that are part of a wave
  const weeksWithWaves = removedWeeks.filter(weekToRemove => {
    const weekEntry = this.tableData.find(week => week.startWeek === weekToRemove);
    return weekEntry && weekEntry.waveNumber;
  });

  if (weeksWithWaves.length > 0) {
    // Inform the user that the weeks are part of a wave and they need to remove the wave first
    alert("Some of the selected weeks are part of an existing wave. Please remove the wave before removing the weeks.");
    
    // Prevent further action
    return;
  }

  // Proceed with week removal if no associated wave is found
  this.tableData = this.tableData.filter(week => !removedWeeks.includes(week.startWeek));
  this.leftGridData = new MatTableDataSource<any>(this.tableData);
}

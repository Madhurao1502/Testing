import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Component({
  selector: 'app-currency-input',
  templateUrl: './currency-input.component.html',
  styleUrls: ['./currency-input.component.css']
})
export class CurrencyInputComponent {
  currencyForm: FormGroup;

  constructor(private fb: FormBuilder) {
    this.currencyForm = this.fb.group({
      currency: ['', [Validators.required]]
    });
  }

  get currency() {
    return this.currencyForm.get('currency');
  }

  formatCurrency(event: any) {
    let inputValue = event.target.value;

    // Remove all non-numeric characters except for dots and commas
    inputValue = inputValue.replace(/[^0-9.]/g, '');

    // Format the number with commas
    let parts = inputValue.split('.');
    parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Adds commas to thousands
    inputValue = parts.join('.');

    // Ensure the value starts with a `$`
    event.target.value = `$` + inputValue;

    // Update the FormControl value
    this.currencyForm.controls['currency'].setValue(event.target.value, { emitEvent: false });
  }
}

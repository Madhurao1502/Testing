<div class="controls-row">
  <!-- Column Visibility Section -->
  <div class="column-visibility-container">
    <!-- Header -->
    <div class="column-visibility-header">
      Show / Hide Columns
    </div>
    <!-- Icons and Labels -->
    <div class="column-visibility-controls">
      <div *ngFor="let column of columnVisibility; let i = index; trackBy: trackByIndex" class="visibility-icon-wrapper">
        <i
          class="visibility-icon"
          [ngClass]="{'visible-icon': column, 'invisible-icon': !column}"
          (click)="toggleColumn(i)"
        ></i>
        <span>Unnamed Column</span>
      </div>
    </div>
  </div>

  <!-- Pagination and Other Controls -->
  <div class="pagination-controls">
    <select [(ngModel)]="itemsPerPage" (change)="updatePagination()">
      <option *ngFor="let option of rowsPerPageOptions" [value]="option">{{ option }} rows per page</option>
    </select>
    <button (click)="goToPage(currentPage - 1)" [disabled]="currentPage === 1">Previous</button>
    <span>Page {{ currentPage }} of {{ totalPages }}</span>
    <button (click)="goToPage(currentPage + 1)" [disabled]="currentPage === totalPages">Next</button>
    <button (click)="toggleExpandCollapse()" class="expand-btn">{{ allExpanded ? 'Collapse All' : 'Expand All' }}</button>
    <button class="export-btn">Export</button>
  </div>
</div>


/* Main Container */
.controls-row {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding: 15px;
  background-color: #f8f9fa;
  border: 1px solid #ddd;
  border-radius: 8px;
  font-family: 'Arial', sans-serif;
  gap: 20px;
}

/* Column Visibility Section */
.column-visibility-container {
  display: flex;
  flex-direction: column;
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 10px;
  background-color: #fff;
}

/* Header */
.column-visibility-header {
  font-weight: bold;
  font-size: 16px;
  text-align: center;
  margin-bottom: 10px;
  border-bottom: 1px solid #ddd;
  padding-bottom: 5px;
}

/* Icons and Labels */
.column-visibility-controls {
  display: flex;
  gap: 15px;
  flex-wrap: wrap; /* Allow wrapping */
  justify-content: flex-start; /* Align icons to the left */
}

.visibility-icon-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 14px;
  text-align: center;
}

/* Pagination Section */
.pagination-controls {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  align-items: center;
  justify-content: flex-end; /* Align controls to the right */
}

.pagination-controls select,
.pagination-controls button {
  font-size: 14px;
  padding: 5px 10px;
  border-radius: 4px;
}

.pagination-controls button {
  cursor: pointer;
  background-color: #6c757d;
  color: white;
  border: none;
}

.pagination-controls button:hover {
  background-color: #343a40;
}

.pagination-controls button[disabled] {
  background-color: #ccc;
  cursor: not-allowed;
}

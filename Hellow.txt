onStatusChange(event: MatSelectChange) {
  const selected = event.value;
  const selectAllValue = 0;
  const allValues = this.statusList.map(opt => opt.value);
  const allExceptSelectAll = allValues.filter(v => v !== selectAllValue);

  const wasSelectAllPreviouslySelected = this.previousSelected.includes(selectAllValue);
  const isSelectAllNowSelected = selected.includes(selectAllValue);

  // Case: User clicked "Select All"
  if (!wasSelectAllPreviouslySelected && isSelectAllNowSelected) {
    // Select all
    this.statusControl.setValue(allValues);
  }
  // Case: User clicked "Select All" again to deselect all
  else if (wasSelectAllPreviouslySelected && !isSelectAllNowSelected) {
    // Deselect all
    this.statusControl.setValue([]);
  }
  // Case: User manually selected all individual options (add Select All)
  else if (selected.length === allExceptSelectAll.length && !isSelectAllNowSelected) {
    this.statusControl.setValue([selectAllValue, ...allExceptSelectAll]);
  }
  // Other cases: partial selections
  else {
    // Remove Select All if other items were unselected
    if (isSelectAllNowSelected && selected.length < allValues.length) {
      this.statusControl.setValue(selected.filter(v => v !== selectAllValue));
    } else {
      this.statusControl.setValue(selected);
    }
  }

  this.selectedStatus = this.statusControl.value;
  this.previousSelected = this.selectedStatus; // store latest
}

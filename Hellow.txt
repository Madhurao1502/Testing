createWave(): void {
    const selectedRows = this.selection.selected;

    if (selectedRows.length < 2) {
        this.errorMessage = "A wave must contain at least 2 consecutive rows.";
        return;
    }

    // Sort selected rows by their original index in the left grid
    const sortedRows = selectedRows.sort((a, b) => this.leftGridData.data.indexOf(a) - this.leftGridData.data.indexOf(b));
    
    // Check for consecutive rows based on their original indices
    for (let i = 1; i < sortedRows.length; i++) {
        const previousIndex = this.leftGridData.data.indexOf(sortedRows[i - 1]);
        const currentIndex = this.leftGridData.data.indexOf(sortedRows[i]);

        if (currentIndex !== previousIndex + 1) {
            this.errorMessage = "Selected rows must be consecutive based on their indices.";
            return;
        }
    }

    // Proceed with wave creation
    const startRow = this.leftGridData.data.indexOf(sortedRows[0]);
    const endRow = this.leftGridData.data.indexOf(sortedRows[sortedRows.length - 1]);

    const startWeek = sortedRows[0].startWeek;
    const endWeek = sortedRows[sortedRows.length - 1].startWeek;

    const maxDueDate = new Date(sortedRows[sortedRows.length - 1].endDate);
    maxDueDate.setDate(maxDueDate.getDate() + 7);
    const minDueDate = new Date(sortedRows[0].startDate);
    minDueDate.setDate(minDueDate.getDate() - 7);

    const formatToDateTimeString = (date: Date): string => {
      return date.toISOString().slice(0, 16);  // Extract 'YYYY-MM-DDTHH:MM' portion
    };

    const wave = {
        startWeek: `${startWeek} (${sortedRows[0].startDate} - ${sortedRows[0].endDate})`,
        endWeek: `${endWeek} (${sortedRows[sortedRows.length - 1].startDate} - ${sortedRows[sortedRows.length - 1].endDate})`,
        startDate: sortedRows[0].startDate,
        endDate: sortedRows[sortedRows.length - 1].endDate,
        dueDate: '',
        minDueDate: formatToDateTimeString(minDueDate),
        maxDueDate: formatToDateTimeString(maxDueDate)
    };

    // Update the right grid with the new wave
    this.rightGridData.data = [...this.rightGridData.data, wave];
    // Remove selected rows from the left grid
    this.leftGridData.data = this.leftGridData.data.filter(item => !this.selection.isSelected(item));
    // Clear the selection
    this.selection.clear();
}

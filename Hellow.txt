handleWeekSelectionChange(selectedWeeks: number[]) {
  const removedWeeks = this.detectRemovedWeeks(selectedWeeks);

  if (removedWeeks.length > 0) {
    removedWeeks.forEach(weekToRemove => {
      const weekEntry = this.tableData.find(week => week.startWeek === weekToRemove);

      if (weekEntry && weekEntry.waveNumber) {
        // Inform user that the wave must be removed before the week can be unselected
        alert(`Week ${weekToRemove} is part of wave ${weekEntry.waveNumber}. Please remove the wave before removing the week.`);

        // Immediately revert the user's attempt to uncheck the week
        this.selection.select(
          this.leftGridData.data.find(week => week.startWeek === weekToRemove)
        );

        // Prevent further execution since the wave needs to be removed first
        return;
      } else {
        // If no wave is associated, proceed with removing the week
        this.tableData = this.tableData.filter(week => week.startWeek !== weekToRemove);
      }
    });

    // Update the left grid after the modification
    this.leftGridData = new MatTableDataSource<any>(this.tableData);
  }
}

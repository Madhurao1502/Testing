<form [formGroup]="filterForm">
  <mat-toolbar color="primary" style="height: auto; padding: 10px 20px;">
    <!-- IRI Week Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>IRI Week</mat-label>
      <mat-select formControlName="iriWeek">
        <mat-option *ngFor="let week of iriWeeks" [value]="week">{{week}}</mat-option>
      </mat-select>
    </mat-form-field>

    <!-- Territory Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>Territory</mat-label>
      <mat-select formControlName="territory">
        <mat-option *ngFor="let territory of territories" [value]="territory">{{territory}}</mat-option>
      </mat-select>
    </mat-form-field>

    <!-- Store Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>Store</mat-label>
      <input matInput placeholder="Enter Store" formControlName="store" />
    </mat-form-field>

    <!-- State Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>State</mat-label>
      <input matInput placeholder="Enter State" formControlName="state" />
    </mat-form-field>

    <!-- City Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>City</mat-label>
      <input matInput placeholder="Enter City" formControlName="city" />
    </mat-form-field>

    <!-- Cluster Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>Cluster</mat-label>
      <input matInput placeholder="Enter Cluster" formControlName="cluster" />
    </mat-form-field>

    <!-- Task Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter">
      <mat-label>Task</mat-label>
      <input matInput placeholder="Enter Task" formControlName="task" />
    </mat-form-field>

    <!-- FSR Hour Filter -->
    <mat-form-field appearance="fill" class="toolbar-filter" style="width: 150px;">
      <mat-label>FSR Hour Operator</mat-label>
      <mat-select formControlName="fsrHourOperator">
        <mat-option value="NA">NA</mat-option>
        <mat-option value=">">></mat-option>
        <mat-option value="=">=</mat-option>
        <mat-option value="<"><</mat-option>
      </mat-select>
    </mat-form-field>

    <mat-form-field appearance="fill" class="toolbar-filter" style="width: 100px;">
      <mat-label>FSR Hour</mat-label>
      <input matInput type="number" formControlName="fsrHour" />
    </mat-form-field>

    <!-- Action Buttons -->
    <button mat-raised-button color="primary" style="margin-left: 20px;" (click)="onSearch()">Search</button>
    <button mat-raised-button color="accent" style="margin-left: 10px;" (click)="onClear()">Clear</button>
  </mat-toolbar>

  <!-- Horizontal Checkboxes Section -->
  <mat-toolbar color="primary" style="height: auto; padding: 10px 20px;">
    <!-- Exclusive Assigned/Unassigned Stores -->
    <mat-radio-group formControlName="storeAssignment">
      <mat-radio-button value="assigned">Assigned Stores</mat-radio-button>
      <mat-radio-button value="unassigned">Unassigned Stores</mat-radio-button>
    </mat-radio-group>

    <!-- Exclusive Sample/Non-Sample -->
    <mat-radio-group formControlName="sampleType" style="margin-left: 20px;">
      <mat-radio-button value="sample">Sample</mat-radio-button>
      <mat-radio-button value="nonSample">Non-Sample</mat-radio-button>
    </mat-radio-group>

    <!-- Additional Checkboxes -->
    <mat-checkbox formControlName="isMultiFsrStores" style="margin-left: 20px;">Multi FSR Stores</mat-checkbox>
    <mat-checkbox formControlName="isTemporary" style="margin-left: 20px;">Temporary</mat-checkbox>
  </mat-toolbar>
</form>
.toolbar-filter {
  margin-right: 20px;
  width: 150px; /* Adjust width for each field as needed */
}

mat-toolbar {
  flex-wrap: wrap; /* Makes the toolbar responsive */
}

mat-form-field {
  min-width: 120px; /* To ensure consistent width for form fields */
}

@media (max-width: 768px) {
  mat-form-field {
    width: 100%; /* Stack filters in smaller screens */
  }
}
filterForm: FormGroup;

  iriWeeks = ['Week 1', 'Week 2', 'Week 3']; // Example data
  territories = ['North', 'South', 'East', 'West'];

  constructor(private fb: FormBuilder) {
    // Initialize the form with form controls
    this.filterForm = this.fb.group({
      iriWeek: [''],
      territory: [''],
      store: [''],
      state: [''],
      city: [''],
      cluster: [''],
      task: [''],
      fsrHourOperator: ['NA'],
      fsrHour: [null],
      storeAssignment: ['assigned'], // Radio group
      sampleType: ['sample'], // Radio group
      isMultiFsrStores: [false], // Checkbox
      isTemporary: [false], // Checkbox
    });
  }

  onSearch() {
    const filterValues = this.filterForm.value;
    console.log('Search clicked with values:', filterValues);
  }

  onClear() {
    this.filterForm.reset({
      fsrHourOperator: 'NA',
      storeAssignment: 'assigned',
      sampleType: 'sample'
    });
  }
}

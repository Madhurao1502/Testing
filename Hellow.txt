try
        {
            var url = AppSettings.GetValue(AppSettings.DistanceTimeToCallUrl);
            GeoDttRequestModel.Root ro = new(geoPlace_id, dPlace_id);
            
            var objAsJson = JsonConvert.SerializeObject(ro);
            var content = new StringContent(objAsJson, Encoding.UTF8, "application/json");

            _httpClient.DefaultRequestHeaders.Add("X-Goog-Api-Key", AppSettings.GetValue(AppSettings.APIKey));
            _httpClient.DefaultRequestHeaders.Add("X-Goog-FieldMask", "routes.duration,routes.distanceMeters,routes.travelAdvisory.tollInfo,routes.legs.travelAdvisory.tollInfo");

            var response = await _httpClient.PostAsync(url, content);

            if (!response.IsSuccessStatusCode)
            {
                return StatusCode((int)response.StatusCode, $"API error: {response.ReasonPhrase}");
            }

            var result = await response.Content.ReadAsStringAsync();
            return Ok(result);
        }
        catch (HttpRequestException ex)
        {
            return StatusCode(500, $"Request error: {ex.Message}");
        }
        catch (Exception ex)
        {
            return StatusCode(500, $"An error occurred: {ex.Message}");
        }
    }

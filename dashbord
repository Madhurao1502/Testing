<!-- SVG for the arrow -->
  <svg class="arrow-canvas" *ngIf="showSecondTable">
    <line 
      [attr.x1]="lineCoords.x1" [attr.y1]="lineCoords.y1" 
      [attr.x2]="lineCoords.x2" [attr.y2]="lineCoords.y2"
      stroke="black" stroke-width="2" marker-end="url(#arrowhead)" />
    <defs>
      <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="10" refY="3.5" orient="auto">
        <polygon points="0 0, 10 3.5, 0 7" fill="black"/>
      </marker>
    </defs>
  </svg>

lineCoords = { x1: 0, y1: 0, x2: 0, y2: 0 };

selectRow(row: any, event: MouseEvent) {
  this.selectedRowId = row.id;
  this.showSecondTable = true;

  const rowElement = (event.target as HTMLElement).closest('td');
  const rowRect = rowElement!.getBoundingClientRect();
  const secondTable = document.querySelector('table[data-table="second"]') as HTMLElement;

  const secondTableRect = secondTable?.getBoundingClientRect();

  this.lineCoords = {
    x1: rowRect.right,
    y1: rowRect.top + rowRect.height / 2,
    x2: secondTableRect?.left ?? rowRect.right + 200,
    y2: secondTableRect?.top ?? rowRect.top + rowRect.height / 2,
  };
}
ðŸŽ¨ 3. CSS
css
Copy
Edit
.table-container {
  position: relative;
}

.arrow-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* allow clicks through SVG */
}

.selected {
  background-color: #e0f7fa;
}

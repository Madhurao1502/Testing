<header>
  <mat-toolbar class="tool-header">
    <h1>Delivery Screen</h1>
  </mat-toolbar>
</header>

<main class="main-layout">  
  <mat-sidenav-container class="sidenav-container" *ngIf="!hideSidenavContainer">   
    <mat-sidenav #sidenav mode="side" class="sidenav" opened>
        <div class="nav-header-icons">
            <h2>PROJECTS</h2>  
            <span>
                <button class="icon-btn" (click)="GetDeliveryDetailsByProjectID('0')">
                  <mat-icon>add_box</mat-icon>
                </button>
                <button class="icon-btn" (click)="sidenav.toggle()">
                  <mat-icon>push_pin</mat-icon>
                </button>
            </span>
        </div>

        <!-- Filter Section -->
        <div class="filter-section">        
          <div class="filter-row">
            <mat-form-field appearance="fill">
              <mat-label>From</mat-label>
              <input matInput [matDatepicker]="fromDatePicker" [formControl]="fromDateCtrl"/>
              <mat-datepicker-toggle matSuffix [for]="fromDatePicker"></mat-datepicker-toggle>
              <mat-datepicker #fromDatePicker></mat-datepicker>
            </mat-form-field>
            
            <mat-form-field appearance="fill">
              <input matInput type="text" [value]="calculateIriWeek(fromDateCtrl.value)" readonly/>
            </mat-form-field>
          </div>
          
          <div class="filter-row">
            <mat-form-field appearance="fill">
              <mat-label>To</mat-label>
              <input matInput [matDatepicker]="toDatePicker" [formControl]="toDateCtrl"/>
              <mat-datepicker-toggle matSuffix [for]="toDatePicker"></mat-datepicker-toggle>
              <mat-datepicker #toDatePicker></mat-datepicker>
            </mat-form-field>

            <mat-form-field appearance="fill">
              <input matInput type="text" [value]="calculateIriWeek(toDateCtrl.value)" readonly/>
            </mat-form-field>
          </div>

          <mat-form-field appearance="fill">
            <mat-label>Mode</mat-label>
            <mat-select [value]="selectedModes" multiple [formControl]="modeCtrl">
              <mat-option *ngFor="let mode of modes" [value]="mode.value">
                {{ mode.viewValue }}
              </mat-option>
            </mat-select>
          </mat-form-field>

          <mat-form-field appearance="outline" class="search-box">
            <mat-label>Search</mat-label>
            <input type="text" matInput [matAutocomplete]="auto" [formControl]="projectDetailsAndCountOfDeliverablesctrl"/>
            <button mat-button *ngIf="projectDetailsAndCountOfDeliverablesctrl.value" matSuffix mat-icon-button (click)="clearStrCtrl()"> 
              <mat-icon>cancel</mat-icon>
            </button>
            <button mat-button matSuffix mat-icon-button (click)="GetProjectDetailsAndCountOfDeliverables()"> 
              <mat-icon>search</mat-icon>
            </button>
            <mat-autocomplete #auto="matAutocomplete">
              <mat-option *ngFor="let filteredProject of filteredProjectFilterListForSearch" 
                          [value]="filteredProject.ProjectId" (click)="searchRedirect(filteredProject)">
                {{filteredProject.DeliveryStatus}}
              </mat-option>
            </mat-autocomplete>
          </mat-form-field>
        </div>    

        <!-- Projects List -->
        <div class="projects-list">
          <div *ngFor="let project of projectDetailsAndCountOfDeliverables" class="project-item" 
               (click)="GetDeliveryDetailsByProjectID(project)">
            <span class="project-name">{{getShortenedName(project.ProjectName)}}</span> 
            <span class="delivery-count">{{project.DeliveryCount}}</span>
          </div>
        </div>
    </mat-sidenav>

    <mat-sidenav-content class="mat-sidenav-content">
      <button class="toggle-button" *ngIf="!sidenav.opened" (click)="sidenav.toggle()">PROJECTS</button>
      <div class="content-area">
        <h2>Deliverable Tracker</h2>
        <canvasjs-chart [options]="chartOptions"></canvasjs-chart>
      </div>
    </mat-sidenav-content>
  </mat-sidenav-container>
</main>

<footer>
  <div class="mat-spinner-container">
    <mat-spinner mode="indeterminate" *ngIf="showSpinner"></mat-spinner>
    <div *ngIf="showSpinner">Loading...</div>
  </div> 
</footer>


.content{
  margin-bottom: 5px;
}
h1,h2{
  font-size: large;
}
.sidenav-container {
    display: flex;
    height: calc(100vh - 130px);
  }

  .toggle-button{
    position:absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    background-color: #1976d2;
    color: #fff;
    border: none;
    border-radius: 4px;
    padding: 8px 8px;
    cursor: pointer; 
    writing-mode: vertical-lr;
    text-orientation: mixed;
    transition: transform 0.2s ease ,opacity 0.2s ease;
    font-weight: 600;
    
    &:hover{
      background-color: #1565c0;
    }

  }

  .mat-drawer-inner-container {
    width: 100%;
    height: 100%;
    overflow: hidden;
}
  
  .sidenav {

    flex: 0 0 30%;
    max-width: 300px;
    background-color: #f4f4f4;
    overflow-y: auto;
  }

  .mat-sidenav-content{
    flex: 1;
    padding: 0px 10px;
    /* margin-left: 350px; */
    overflow-y: auto;
  }
  
  .filter-section {
     margin: 5px; 
  
    .filter-field {
      width: 100%;
      /* margin-bottom: 16px; */
    }
  
    .search-box {
      /* margin-top: 16px; */
      padding-bottom: 0;
    }
  }
  
  .projects-or-deliverables {
    margin: 5px;
    height: 300px;
    padding: 10px;
    overflow: auto;
    h3 {
      margin-bottom: 16px;
      font-size: 1.2rem;
      font-weight: bold;
    }
  
    .data-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 8px 0;
      border-bottom: 1px solid #ddd;
      cursor: pointer;
      transition: background-color 0.2s ease,transform 0.2s ease;
    
      &:hover{
        background-color: #e0f7fa;
        /* transform: translate(4px); */
      }

      .project-name {
        font-size: 1rem;
        color: #333;
      }
  
      .delivery-count {
        background-color: #1976d2;
        color: #fff;
        font-size: 0.9rem;
        width: 25px;
        height: 25px;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);
      }
    }
  }
  
  .content-area {
    display: grid;
    gap: 10px;
    padding: 0px;    
    h2 {
      margin-bottom: 16px;
    }  
   
  }

  .content-area1 {
    display: grid;
    gap: 10px;
    padding: 10px;   
    margin-left: 20px;
    height: 95%;
    overflow: auto;
    h2 {
      margin-bottom: 16px;
    }  
   
  }
  
  .footer {
    text-align: center;
    padding: 16px;
    background-color: #f4f4f4;
    color: #666;
  }

  .search-container{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    
  }

  .deliverables{
    overflow: auto;
    height: 90%;
    h3 {
      margin-bottom: 16px;
      font-size: 1.2rem;
      font-weight: bold;
    }
  
    .deliverables-data {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      padding: 8px 5px;
      border-bottom: 1px solid #ddd;
      cursor: pointer;
      transition: background-color 0.2s ease,transform 0.2s ease;
    
      &:hover{
        background-color: #e0f7fa;
   
      }

      .delivery-name {
        font-size: 1rem;
    
      }
  
      .delivery-number {       
        font-size: 1rem;
 
      }
    }
  }

  .selected-item{
    background-color: #1976d2;
    color: #fff;
 
    border-radius: 5px;
    &:hover{
      color: #333;
   
    }

  }

 

  .nav-header-icons-container{
    display: flex ;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: space-between;
    align-items: center;
    cursor: pointer;
    .nav-header-icon button{
      border: none;      
    }

 
    .nav-header-icon .pin-icon{
      margin-left: 10px;      
    }
  }

  .status-circle{
    display: inline-block;
    width: 10px;
    height: 10px;
    margin-right: 5px;
    border-radius: 50%;
    border: 1px solid transparent;
  }

  .status-failed{
    background-color: red;
  }

  .status-success{
    background-color: green;
  }

  .status-initial{
    background-color: white;
    border: 1px solid #ccc;
  }

  .status-inprogress{
    background-color: #001aff;
  }

  .status-reprogress{
    background-color: #ff6500;
  }
  .status-unknown{
    background-color: gray;
  }

  .status-abandon{
    background-color: #ffff00;
  }


 @media screen and (max-width:1280px) {
  .projects-or-deliverables{
    margin: 10px;
    height: 450px;
    overflow: auto;
  }
  
 }

<div>
  <h3>Available Weeks</h3>
  <table mat-table [dataSource]="leftGridData" class="mat-elevation-z8">
    <ng-container matColumnDef="select">
      <th mat-header-cell *matHeaderCellDef>
        <mat-checkbox (change)="$event ? masterToggle() : null" [checked]="isAllSelected()" [indeterminate]="isIndeterminate()"></mat-checkbox>
      </th>
      <td mat-cell *matCellDef="let row">
        <mat-checkbox (click)="$event.stopPropagation()" (change)="$event ? toggleRow(row) : null" [checked]="selection.isSelected(row)"></mat-checkbox>
      </td>
    </ng-container>

    <ng-container matColumnDef="MMYY">
      <th mat-header-cell *matHeaderCellDef>MMYY</th>
      <td mat-cell *matCellDef="let element">{{ element.MMYY }}</td>
    </ng-container>

    <ng-container matColumnDef="Start_Week">
      <th mat-header-cell *matHeaderCellDef>Start Week</th>
      <td mat-cell *matCellDef="let element">{{ element.Start_Week }}</td>
    </ng-container>

    <ng-container matColumnDef="Start_Date">
      <th mat-header-cell *matHeaderCellDef>Start Date</th>
      <td mat-cell *matCellDef="let element">{{ element.Start_Date }}</td>
    </ng-container>

    <ng-container matColumnDef="End_Date">
      <th mat-header-cell *matHeaderCellDef>End Date</th>
      <td mat-cell *matCellDef="let element">{{ element.End_Date }}</td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="leftGridDisplayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: leftGridDisplayedColumns;"></tr>
  </table>

  <button mat-raised-button color="primary" (click)="createWave()">Create Wave</button>
  <div *ngIf="errorMessage" class="error">{{ errorMessage }}</div>
</div>

<!-- Right Grid: Displays created waves -->
<div>
  <h3>Created Waves</h3>
  <table mat-table [dataSource]="rightGridData" class="mat-elevation-z8">
    <ng-container matColumnDef="Start_Week">
      <th mat-header-cell *matHeaderCellDef>Start Week</th>
      <td mat-cell *matCellDef="let element">{{ element.Start_Week }}</td>
    </ng-container>

    <ng-container matColumnDef="End_Week">
      <th mat-header-cell *matHeaderCellDef>End Week</th>
      <td mat-cell *matCellDef="let element">{{ element.End_Week }}</td>
    </ng-container>

    <ng-container matColumnDef="Due_Date">
      <th mat-header-cell *matHeaderCellDef>Due Date</th>
      <td mat-cell *matCellDef="let element">
        <input matInput [matDatepicker]="picker" [(ngModel)]="element.Due_Date">
        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>
        <mat-datepicker #picker [startAt]="element.minDate" [endAt]="element.maxDate"></mat-datepicker>
      </td>
    </ng-container>

    <ng-container matColumnDef="action">
      <th mat-header-cell *matHeaderCellDef>Action</th>
      <td mat-cell *matCellDef="let element">
        <button mat-raised-button color="warn" (click)="removeWave(element)">Remove</button>
      </td>
    </ng-container>

    <tr mat-header-row *matHeaderRowDef="rightGridDisplayedColumns"></tr>
    <tr mat-row *matRowDef="let row; columns: rightGridDisplayedColumns;"></tr>
  </table>
</div>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Center Selection</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>

  <div id="app">
    <h1>Select State and Centers</h1>

    <label for="state">State:</label>
    <select id="stateSelect">
      <option value="" disabled selected>Select State</option>
      <option value="AP">Andhra Pradesh</option>
      <option value="UP">Uttar Pradesh</option>
      <option value="TN">Tamil Nadu</option>
      <option value="KA">Karnataka</option>
    </select>

    <div id="centersContainer"></div>

    <button id="resetDropdowns">Reset Dropdowns</button>
    <button id="showSelected">Show Selected</button>
  </div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
  const states = {
    AP: "Andhra Pradesh",
    UP: "Uttar Pradesh",
    TN: "Tamil Nadu",
    KA: "Karnataka"
  };

  const centersByState = {
    AP: ['Tirupati', 'Visakhapatnam', 'Vijayawada'],
    UP: ['Agra', 'Lucknow', 'Varanasi'],
    TN: ['Chennai', 'Madurai', 'Coimbatore'],
    KA: ['Bengaluru', 'Mysore', 'Mangaluru', 'Mangaluru-1', 'Mangaluru-2']
  };

  let selectedCenters = []; // Stores currently selected centers

  function initForm() {
    $('#stateSelect').on('change', function () {
      const state = $(this).val();
      if (state) {
        updateCenters(centersByState[state]);
      } else {
        $('#centersContainer').empty();
      }
    });

    $(document).on('change', '.centerSelect', function () {
      const selectedCenter = $(this).val();
      const currentIndex = $(this).data('index');

      selectedCenters[currentIndex] = selectedCenter;
      updateDropdownOptions(currentIndex, selectedCenter);
      updateSelectedOptions();
    });

    $(document).on('click', '.addDropdown', function () {
      const centerOptions = centersByState[$('#stateSelect').val()];
      const currentIndex = $('.centerSelect').length;

      // Check if the maximum number of dropdowns has been reached
      if (currentIndex < centerOptions.length) {
        addDynamicDropdown(currentIndex, centerOptions);
        updateSelectedOptions();
      }
    });

    $(document).on('click', '.removeDropdown', function () {
      const currentIndex = $(this).data('index');
      // Check if the dropdown to be removed is not the first one
      if (currentIndex > 0) {
        removeDynamicDropdown(currentIndex);
        updateSelectedOptions();
      }
    });

    $('#resetDropdowns').on('click', function () {
      resetDropdowns();
      updateSelectedOptions();
    });

    $('#showSelected').on('click', function () {
      console.log('Selected Centers:', selectedCenters);
    });
  }

  function updateCenters(centerOptions) {
    $('#centersContainer').empty();
    addDynamicDropdown(0, centerOptions);
  }

  function addDynamicDropdown(index, centerOptions) {
    const $select = $('<select>')
      .addClass('centerSelect')
      .data('index', index)
      .append('<option value="" disabled selected>Select Center</option>');

    centerOptions.forEach(center => {
      const $option = $("<option>", {
        value: center,
        text: center
      });

      if (selectedCenters.indexOf(center) === -1) {
        $select.append($option);
      }
    });

    const $container = $('<div class="center">')
      .append(`<label for="centerSelect${index}">Select Center:</label>`)
      .append($select)
      .append(`<button class="addDropdown" data-index="${index}">Add</button>`)
    

    $('#centersContainer').append($container);
  }

  //function removeDynamicDropdown(index) {
  //  $(`.centerSelect[data-index="${index}"]`).parent().remove();
 // }

  function updateDropdownOptions(currentIndex, selectedCenter) {
    $('.centerSelect').each(function () {
      const index = $(this).data('index');

      if (index !== currentIndex) {
        $(this).find(`option[value="${selectedCenter}"]`).remove();
      }
    });
  }

  function resetDropdowns() {
    $('.centerSelect').each(function () {
      const index = $(this).data('index');
      $(this).parent().remove();
    });

    selectedCenters = [];
    const centerOptions = centersByState[$('#stateSelect').val()];
    addDynamicDropdown(0, centerOptions);
  }

  function updateSelectedOptions() {
    selectedCenters = [];
    $('.centerSelect').each(function () {
      const selectedCenter = $(this).val();
      if (selectedCenter) {
        selectedCenters.push(selectedCenter);
      }
    });
  }

  $(document).ready(function () {
    initForm();
  });
</script>

</body>
</html>

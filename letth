<div class="controls-row">
  <!-- Expand/Collapse Buttons -->
  <button (click)="expandAll()" class="btn">Expand All</button>
  <button (click)="collapseAll()" class="btn">Collapse All</button>

  <!-- Column Visibility Checkboxes -->
  <div class="column-visibility-controls">
    <div *ngFor="let column of columnVisibility; let i = index; trackBy: trackByIndex" class="checkbox-wrapper">
      <input type="checkbox" [checked]="column" (change)="toggleColumn(i)">
      <span class="tooltip">{{ getColumnName(i) || 'Unnamed Column' }}</span>
    </div>
  </div>

  <!-- Rows Per Page Selector -->
  <select [(ngModel)]="itemsPerPage" (change)="updatePagination()">
    <option *ngFor="let option of rowsPerPageOptions" [value]="option">{{ option }} rows per page</option>
  </select>

  <!-- Pagination Controls -->
  <button (click)="goToPage(currentPage - 1)" [disabled]="currentPage === 1">Previous</button>
  <span>Page {{ currentPage }} of {{ totalPages }}</span>
  <button (click)="goToPage(currentPage + 1)" [disabled]="currentPage === totalPages">Next</button>
</div>

<div class="table-container">
  <table class="full-width-table">
    <thead>
      <tr>
        <th [attr.colspan]="getPlaceholderColspan()"></th>
        <th colspan="4">Week 1</th>
        <th colspan="4">Week 2</th>
      </tr>
      <tr>
        <th [attr.colspan]="getPlaceholderColspan()"></th>
        <th colspan="2">Collector</th>
        <th colspan="2">Store</th>
        <th colspan="2">Collector</th>
        <th colspan="2">Store</th>
      </tr>
      <tr>
        <th *ngIf="columnVisibility[0]" (click)="sortData('Region')">Region</th>
        <th *ngIf="columnVisibility[1]" (click)="sortData('Territory')">Territory</th>
        <th *ngIf="columnVisibility[2]" (click)="sortData('StoreNumber')">Store Number</th>
        <th *ngIf="columnVisibility[3]" (click)="sortData('StoreName')">Store Name</th>
        <th *ngIf="columnVisibility[4]" (click)="sortData('Address')">Address</th>
        <th *ngIf="columnVisibility[5]" (click)="sortData('City')">City</th>
        <th *ngIf="columnVisibility[6]" (click)="sortData('State')">State</th>
        <th *ngIf="columnVisibility[7]" (click)="sortData('TaskName')">Task Name</th>
        <th *ngIf="columnVisibility[8]" (click)="sortData('Name')">FSR</th>
        <th *ngIf="columnVisibility[9]" (click)="sortData('miles')">Guaranteed Miles</th>

        <!-- Week Data Columns with Filters -->
        <th (click)="sortData('w1c_ov_Doller')">$ Overage
          <i class="fa fa-filter filter-icon" (click)="toggleFilterDropdown('w1c_ov_Doller')"></i>
          <div *ngIf="filterDropdowns.w1c_ov_Doller" class="filter-dropdown">
            <input type="number" placeholder="Min" [(ngModel)]="filters.w1c_ov_Doller_min" (ngModelChange)="applyFilters()" />
            <input type="number" placeholder="Max" [(ngModel)]="filters.w1c_ov_Doller_max" (ngModelChange)="applyFilters()" />
            <button (click)="clearFilter('w1c_ov_Doller')">Clear</button>
          </div>
        </th>
        <th (click)="sortData('w1c_ov_percent')">% Overage</th>
        <th (click)="sortData('w1s_ov_Doller')">$ Overage</th>
        <th  (click)="sortData('w1s_ov_percent')">% Overage</th>
        <th (click)="sortData('w2c_ov_Doller')">$ Overage</th>
        <th (click)="sortData('w2c_ov_percent')">% Overage</th>
        <th  (click)="sortData('w2s_ov_Doller')">$ Overage</th>
        <th (click)="sortData('w2s_ov_percent')">% Overage</th>
      </tr>
  
    </thead>
    <tbody>
      <ng-container *ngFor="let item of getDisplayedData(); let i = index">
        <tr *ngIf="item.TaskName === 'ALL'" (click)="toggleRow(item.StoreNumber)" [class.parent-row]="true">
          <td *ngIf="columnVisibility[0]">{{ item.Region }}</td>
          <td *ngIf="columnVisibility[1]">{{ item.Territory }}</td>
          <td *ngIf="columnVisibility[2]">{{ item.StoreNumber }}</td>
          <td *ngIf="columnVisibility[3]">{{ item.StoreName }}</td>
          <td *ngIf="columnVisibility[4]">{{ item.Address }}</td>
          <td *ngIf="columnVisibility[5]">{{ item.City }}</td>
          <td *ngIf="columnVisibility[6]">{{ item.State }}</td>
          <td *ngIf="columnVisibility[7]">{{ item.TaskName }}</td>
          <td *ngIf="columnVisibility[8]">{{ item.Name }}</td>
          <td *ngIf="columnVisibility[9]">{{ item.miles }}</td>
          <td>{{ item.w1c_ov_Doller }}</td>
          <td>{{ item.w1c_ov_percent }}</td>
          <td>{{ item.w1s_ov_Doller }}</td>
          <td>{{ item.w1s_ov_percent }}</td>
          <td>{{ item.w2c_ov_Doller }}</td>
          <td>{{ item.w2c_ov_percent }}</td>
          <td>{{ item.w2s_ov_Doller }}</td>
          <td>{{ item.w2s_ov_percent }}
  
             <!-- Expanded Rows for Child Tasks (TaskName !== 'ALL' and same StoreNumber) -->
      <tr *ngIf="item.TaskName !== 'ALL' && expandedRows[item.StoreNumber]" class="expanded-row">
        <ng-container *ngFor="let isVisible of columnVisibility.slice(0, 7); let i = index">
          <td *ngIf="isVisible"></td>
        </ng-container>
        <!-- Task Name and FSR columns are always shown -->
        <td *ngIf="columnVisibility[7]">{{ item.TaskName }}</td>
        <td *ngIf="columnVisibility[8]">{{ item.Name }}</td>
        <!-- Dynamic colspan for remaining columns based on visibility after FSR -->
        <td [attr.colspan]="calculateChildColspan()"></td>
      </tr>

        </tr>
      </ng-container>
    </tbody>
  </table>
</div>
